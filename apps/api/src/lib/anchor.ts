import { Connection, Keypair, PublicKey } from '@solana/web3.js';\nimport { AnchorProvider, Program, Idl, Wallet } from '@coral-xyz/anchor';\nimport idl from '../../../programs/launchpad/target/idl/launchpad.json' assert { type: 'json' };\nexport function getProgram() {\n  const rpc = process.env.RPC!;\n  const connection = new Connection(rpc, 'confirmed');\n  const secret = Uint8Array.from(JSON.parse(Buffer.from(process.env.ADMIN_SECRET_B64!, 'base64').toString('utf8')));\n  const kp = Keypair.fromSecretKey(secret);\n  const wallet: Wallet = { publicKey: kp.publicKey, signAllTransactions: async txs => txs.map(t=>{t.partialSign(kp); return t;}), signTransaction: async tx => { tx.partialSign(kp); return tx; } } as any;\n  const provider = new AnchorProvider(connection, wallet, { commitment: 'confirmed' });\n  // @ts-ignore\n  return new Program(idl as Idl, new PublicKey(process.env.PROGRAM_ID!), provider);\n}
