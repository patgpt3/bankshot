import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

import "@solana/wallet-adapter-react-ui/styles.css";`nimport { ConnectionProvider, WalletProvider } from "@solana/wallet-adapter-react";`nimport { PhantomWalletAdapter, SolflareWalletAdapter } from "@solana/wallet-adapter-wallets";`nimport React from "react";`nimport "./globals.css";`n`nexport default function RootLayout({ children }: { children: React.ReactNode }) {`n  const endpoint = process.env.NEXT_PUBLIC_RPC!;`n  const wallets = React.useMemo(() => [new PhantomWalletAdapter(), new SolflareWalletAdapter()], []);`n  return (`n    <html lang=\"en\"><body>`n      <ConnectionProvider endpoint={endpoint}>`n        <WalletProvider wallets={wallets} autoConnect>`n          {children}`n        </WalletProvider>`n      </ConnectionProvider>`n    </body></html>`n  );`n}
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        {children}
      </body>
    </html>
  );
}
