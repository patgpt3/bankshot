// Prisma schema for ecommerce scaffolding
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id          String     @id @default(cuid()) @map("_id")
  slug        String     @unique
  name        String
  description String?
  active      Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  variants    Variant[]
  images      ProductImage[]
  collections ProductCollection[]
}

model Variant {
  id         String   @id @default(cuid()) @map("_id")
  sku        String   @unique
  title      String
  priceCents Int
  currency   String   @default("USD")
  inventory  Int      @default(0)
  productId  String
  product    Product  @relation(fields: [productId], references: [id])
  cartItems  CartItem[]
}

model ProductImage {
  id        String  @id @default(cuid()) @map("_id")
  url       String
  alt       String?
  position  Int     @default(0)
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model Collection {
  id    String @id @default(cuid()) @map("_id")
  slug  String @unique
  name  String
  items ProductCollection[]
}

model ProductCollection {
  id           String @id @default(cuid()) @map("_id")
  productId    String
  collectionId String
  product      Product    @relation(fields: [productId], references: [id])
  collection   Collection @relation(fields: [collectionId], references: [id])

  @@unique([productId, collectionId])
}

model Cart {
  id        String     @id @default(cuid()) @map("_id")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  items     CartItem[]
  email     String?
  completed Boolean    @default(false)
}

model CartItem {
  id        String  @id @default(cuid()) @map("_id")
  cartId    String
  variantId String
  quantity  Int     @default(1)
  cart      Cart    @relation(fields: [cartId], references: [id])
  variant   Variant @relation(fields: [variantId], references: [id])

  @@unique([cartId, variantId])
}

model Order {
  id           String     @id @default(cuid()) @map("_id")
  cartId       String     @unique
  email        String
  amountCents  Int
  currency     String     @default("USD")
  stripeId     String     @unique
  status       String
  paymentRail  String     @default("stripe")
  txId         String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  projectId   String?
  tierId      String?
  referralCode String?
}


// ---- Creator Projects ----

model Project {
  id           String   @id @default(cuid()) @map("_id")
  slug         String   @unique
  title        String
  subtitle     String?
  description  String?
  priceCents   Int?
  currency     String?  @default("USD")
  supplyCap    Int?
  treasury     String?
  theme        Json?
  template     String   @default("default")
  published    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  images       ProjectImage[]
  subscribers ProjectSubscriber[]
  tiers       Tier[]
  stretchGoals StretchGoal[]
  promoCodes  PromoCode[]
  updates     ProjectUpdate[]
  referrals   Referral[]
  goalCents   Int?
  pledgedCents Int   @default(0)
  backersCount Int   @default(0)
  subscribers ProjectSubscriber[]
}

model ProjectImage {
  id        String  @id @default(cuid()) @map("_id")
  url       String
  alt       String?
  position  Int     @default(0)
  projectId String
  project   Project @relation(fields: [projectId], references: [id])
}

model ProjectSubscriber {
  id        String  @id @default(cuid()) @map("_id")
  projectId String
  email     String
  createdAt DateTime @default(now())
  project   Project @relation(fields: [projectId], references: [id])

  @@unique([projectId, email])
}


model Tier {
  id         String   @id @default(cuid()) @map("_id")
  projectId  String
  name       String
  description String?
  priceCents Int
  maxQty     Int?
  soldQty    Int      @default(0)
  shipEta    String?
  project    Project  @relation(fields: [projectId], references: [id])
}

model StretchGoal {
  id         String   @id @default(cuid()) @map("_id")
  projectId  String
  amountCents Int
  title      String
  unlocked   Boolean  @default(false)
  project    Project  @relation(fields: [projectId], references: [id])
}

model PromoCode {
  id         String   @id @default(cuid()) @map("_id")
  projectId  String
  code       String
  percentOff Int?
  amountOff  Int?
  maxUses    Int?
  used       Int      @default(0)
  active     Boolean  @default(true)
  project    Project  @relation(fields: [projectId], references: [id])

  @@unique([projectId, code])
}

model ProjectUpdate {
  id         String   @id @default(cuid()) @map("_id")
  projectId  String
  title      String
  body       String
  publishedAt DateTime @default(now())
  project    Project  @relation(fields: [projectId], references: [id])
}

model Referral {
  id         String   @id @default(cuid()) @map("_id")
  projectId  String
  code       String
  clicks     Int      @default(0)
  orders     Int      @default(0)
  amountCents Int     @default(0)
  project    Project  @relation(fields: [projectId], references: [id])

  @@unique([projectId, code])
}

